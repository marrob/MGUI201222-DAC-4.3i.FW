/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void sldrVolumeValueChanged(int value)
    {
        // Override and implement this function in Main
    }

    virtual void chbxMuteChanged()
    {
        // Override and implement this function in Main
    }

    virtual void rdbXLRInputsSelected()
    {
        // Override and implement this function in Main
    }

    virtual void rdbUSBInputsSelected()
    {
        // Override and implement this function in Main
    }

    virtual void rdbHDMIInputsSelected()
    {
        // Override and implement this function in Main
    }

    virtual void rdbRCAInputsSelected()
    {
        // Override and implement this function in Main
    }

    virtual void rdbBNCInputsSelected()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::Container containerVolume;
    touchgfx::ScalableImage pbxSwap;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  btnVolume;
    touchgfx::TextArea lblDescVolume;
    touchgfx::Container containerFormat;
    touchgfx::TextArea lblDescFormat;
    touchgfx::TextAreaWithOneWildcard lblValueFormat;
    touchgfx::TextAreaWithOneWildcard lblDSDValue;
    touchgfx::TextArea lblDSDValue_2;
    touchgfx::Container containerFreq;
    touchgfx::TextAreaWithOneWildcard lblSRCFreq;
    touchgfx::TextArea lblDescFreq;
    touchgfx::TextAreaWithOneWildcard lblValueFreq;
    touchgfx::ScalableImage pbxSRCOn;
    touchgfx::BoxWithBorder box22;
    touchgfx::ScalableImage img22;
    touchgfx::BoxWithBorder box24;
    touchgfx::ScalableImage img24;
    touchgfx::BoxWithBorder box245;
    touchgfx::ScalableImage img245;
    touchgfx::BoxWithBorder boxIntExt;
    touchgfx::ScalableImage imgIntExt;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  btnSettings;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  btnDisplay;
    touchgfx::TextAreaWithOneWildcard lblDateTime;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  btnShowSaver;
    touchgfx::Container containerTemperature;
    touchgfx::Circle circTemp3;
    touchgfx::PainterRGB565 circTemp3Painter;
    touchgfx::Circle circTemp2;
    touchgfx::PainterRGB565 circTemp2Painter;
    touchgfx::Circle circTemp1;
    touchgfx::PainterRGB565 circTemp1Painter;
    touchgfx::Container containerDACFilter;
    touchgfx::ScalableImage pbxPhase;
    touchgfx::ScalableImage pbxPrec;
    touchgfx::TextArea tbxDeEmp;
    touchgfx::ScalableImage pbxFIR;
    touchgfx::ScalableImage pbxDeltaSigma;
    touchgfx::ScalableImage pbxDSD;
    touchgfx::Container containerSelectInput;
    touchgfx::BoxWithBorder boxWithBorder4;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btnHideInputs;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnSelectInput;
    touchgfx::Box boxinput;
    touchgfx::ScalableImage pbxInput;
    touchgfx::MoveAnimator< touchgfx::Container > containerInputs;
    touchgfx::BoxWithBorder boxWithBorder3;
    touchgfx::Box bxInput;
    touchgfx::RadioButton rdbBNC;
    touchgfx::RadioButton rdbRCA;
    touchgfx::RadioButton rdbHDMI;
    touchgfx::RadioButton rdbUSB;
    touchgfx::RadioButton rdbXLR;
    touchgfx::MoveAnimator< touchgfx::Container > containerVolumeSet;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::Slider sldrVolume;
    touchgfx::TextAreaWithOneWildcard lblVolume;
    touchgfx::ToggleButton chbxMute;
    touchgfx::TextArea lblVolumeLevel;
    touchgfx::TextArea lblMute;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnBackVolume;
    touchgfx::RadioButtonGroup<5> inputs;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBLVALUEFORMAT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblValueFormatBuffer[LBLVALUEFORMAT_SIZE];
    static const uint16_t LBLDSDVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblDSDValueBuffer[LBLDSDVALUE_SIZE];
    static const uint16_t LBLSRCFREQ_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblSRCFreqBuffer[LBLSRCFREQ_SIZE];
    static const uint16_t LBLVALUEFREQ_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblValueFreqBuffer[LBLVALUEFREQ_SIZE];
    static const uint16_t LBLDATETIME_SIZE = 25;
    touchgfx::Unicode::UnicodeChar lblDateTimeBuffer[LBLDATETIME_SIZE];
    static const uint16_t LBLVOLUME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblVolumeBuffer[LBLVOLUME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);
    /*
     * Interaction Callback Declarations
     */
    touchgfx::Callback < MainViewBase, const touchgfx::MoveAnimator<touchgfx::Container>& > showInputsEndedCallback;
    touchgfx::Callback < MainViewBase, const touchgfx::MoveAnimator<touchgfx::Container>& > hideInputsEndedCallback;


    /*
     * Interaction Handlers
     */
    void showInputsEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);
    void hideInputsEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINVIEWBASE_HPP
