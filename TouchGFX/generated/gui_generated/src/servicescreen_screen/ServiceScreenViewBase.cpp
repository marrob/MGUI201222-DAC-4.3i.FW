/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/servicescreen_screen/ServiceScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ServiceScreenViewBase::ServiceScreenViewBase() :
    flexButtonCallback(this, &ServiceScreenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 1, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    btnBack.setBoxWithBorderPosition(0, 0, 394, 72);
    btnBack.setBorderSize(1);
    btnBack.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(100, 100, 100), touchgfx::Color::getColorFromRGB(100, 100, 100));
    btnBack.setBitmaps(Bitmap(BITMAP_GOBACK_ID), Bitmap(BITMAP_GOBACK_ID));
    btnBack.setBitmapXY(20, -5);
    btnBack.setText(TypedText(T___SINGLEUSE_HW10));
    btnBack.setTextPosition(-20, 20, 394, 72);
    btnBack.setTextColors(touchgfx::Color::getColorFromRGB(150, 118, 73), touchgfx::Color::getColorFromRGB(64, 64, 64));
    btnBack.setAction(flexButtonCallback);
    btnBack.setPosition(4, 404, 394, 72);
    add(btnBack);

    btnLog.setBoxWithBorderPosition(0, 0, 394, 72);
    btnLog.setBorderSize(1);
    btnLog.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(100, 100, 100), touchgfx::Color::getColorFromRGB(100, 100, 100));
    btnLog.setText(TypedText(T___SINGLEUSE_IGHU));
    btnLog.setTextPosition(-20, 20, 394, 72);
    btnLog.setTextColors(touchgfx::Color::getColorFromRGB(150, 118, 73), touchgfx::Color::getColorFromRGB(64, 64, 64));
    btnLog.setBitmaps(Bitmap(BITMAP_LOG_ID), Bitmap(BITMAP_LOG_ID));
    btnLog.setBitmapXY(20, 5);
    btnLog.setPosition(402, 404, 394, 72);
    add(btnLog);

    boxWithBorder1.setPosition(4, 80, 792, 320);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(25, 25, 25));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(100, 100, 100));
    boxWithBorder1.setBorderSize(1);
    add(boxWithBorder1);

    lblServiceTitle.setPosition(0, 8, 800, 72);
    lblServiceTitle.setColor(touchgfx::Color::getColorFromRGB(128, 128, 128));
    lblServiceTitle.setLinespacing(0);
    lblServiceTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LJNE));
    add(lblServiceTitle);

    scrollContService.setPosition(2, 80, 792, 320);
    scrollContService.enableHorizontalScroll(false);
    scrollContService.setScrollbarsColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scrollContService.setScrollbarsPermanentlyVisible();
    scrollContService.setScrollbarsVisible(false);
    serviceControl.setXY(0, 0);
    scrollContService.add(serviceControl);

    add(scrollContService);
}

ServiceScreenViewBase::~ServiceScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void ServiceScreenViewBase::setupScreen()
{
    serviceControl.initialize();
}

void ServiceScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btnBack)
    {
        //ShowSettings
        //When btnBack clicked change screen to SettingsScreen
        //Go to SettingsScreen with screen transition towards West
        application().gotoSettingsScreenScreenSlideTransitionWest();
    }
}
