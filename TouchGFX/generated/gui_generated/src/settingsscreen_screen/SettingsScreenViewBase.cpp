/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settingsscreen_screen/SettingsScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SettingsScreenViewBase::SettingsScreenViewBase() :
    flexButtonCallback(this, &SettingsScreenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    btnShowService.setBoxWithBorderPosition(0, 0, 394, 72);
    btnShowService.setBorderSize(1);
    btnShowService.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(100, 100, 100), touchgfx::Color::getColorFromRGB(100, 100, 100));
    btnShowService.setText(TypedText(T___SINGLEUSE_YTJC));
    btnShowService.setTextPosition(-20, 20, 394, 72);
    btnShowService.setTextColors(touchgfx::Color::getColorFromRGB(150, 118, 73), touchgfx::Color::getColorFromRGB(64, 64, 64));
    btnShowService.setBitmaps(Bitmap(BITMAP_DARK_ICONS_INFO_48_ID), Bitmap(BITMAP_DARK_ICONS_INFO_48_ID));
    btnShowService.setBitmapXY(30, 12);
    btnShowService.setAction(flexButtonCallback);
    btnShowService.setPosition(402, 404, 394, 72);
    add(btnShowService);

    btnBack.setBoxWithBorderPosition(0, 0, 394, 72);
    btnBack.setBorderSize(1);
    btnBack.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(100, 100, 100), touchgfx::Color::getColorFromRGB(100, 100, 100));
    btnBack.setBitmaps(Bitmap(BITMAP_GOBACK_ID), Bitmap(BITMAP_GOBACK_ID));
    btnBack.setBitmapXY(20, -5);
    btnBack.setText(TypedText(T___SINGLEUSE_XWX2));
    btnBack.setTextPosition(-20, 20, 394, 72);
    btnBack.setTextColors(touchgfx::Color::getColorFromRGB(150, 118, 73), touchgfx::Color::getColorFromRGB(64, 64, 64));
    btnBack.setAction(flexButtonCallback);
    btnBack.setPosition(4, 404, 394, 72);
    add(btnBack);

    lblTitle.setPosition(0, 8, 800, 72);
    lblTitle.setColor(touchgfx::Color::getColorFromRGB(128, 128, 128));
    lblTitle.setLinespacing(0);
    lblTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPEX));
    add(lblTitle);

    boxWithBorder1.setPosition(4, 80, 792, 320);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(25, 25, 25));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(100, 100, 100));
    boxWithBorder1.setBorderSize(1);
    add(boxWithBorder1);

    scrollableContainerSettings.setPosition(4, 83, 792, 313);
    scrollableContainerSettings.enableHorizontalScroll(false);
    scrollableContainerSettings.setScrollbarsColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scrollableContainerSettings.setScrollbarsPermanentlyVisible();
    scrollableContainerSettings.setScrollbarsVisible(false);
    dacContainer1.setXY(2, 0);
    scrollableContainerSettings.add(dacContainer1);

    containerClock.setPosition(-4, 1485, 796, 157);
    btnClockSettings.setBoxWithBorderPosition(0, 0, 700, 72);
    btnClockSettings.setBorderSize(1);
    btnClockSettings.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(100, 100, 100), touchgfx::Color::getColorFromRGB(100, 100, 100));
    btnClockSettings.setText(TypedText(T___SINGLEUSE_37JV));
    btnClockSettings.setTextPosition(-20, 20, 700, 72);
    btnClockSettings.setTextColors(touchgfx::Color::getColorFromRGB(150, 118, 73), touchgfx::Color::getColorFromRGB(64, 64, 64));
    btnClockSettings.setAction(flexButtonCallback);
    btnClockSettings.setPosition(41, 39, 700, 72);
    containerClock.add(btnClockSettings);

    line2.setPosition(53, 142, 710, 15);
    line2Painter.setColor(touchgfx::Color::getColorFromRGB(64, 64, 64));
    line2.setPainter(line2Painter);
    line2.setStart(0, 0);
    line2.setEnd(920, 1);
    line2.setLineWidth(2);
    line2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    containerClock.add(line2);

    lblClockTitle.setXY(16, 0);
    lblClockTitle.setColor(touchgfx::Color::getColorFromRGB(200, 200, 200));
    lblClockTitle.setLinespacing(0);
    lblClockTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_23R7));
    containerClock.add(lblClockTitle);

    scrollableContainerSettings.add(containerClock);

    add(scrollableContainerSettings);
}

SettingsScreenViewBase::~SettingsScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void SettingsScreenViewBase::setupScreen()
{
    dacContainer1.initialize();
}

void SettingsScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btnBack)
    {
        //ShowMain
        //When btnBack clicked change screen to Main
        //Go to Main with screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
    if (&src == &btnShowService)
    {
        //ShowPassword
        //When btnShowService clicked change screen to PasswordScreen
        //Go to PasswordScreen with screen transition towards East
        application().gotoPasswordScreenScreenSlideTransitionEast();
    }
    if (&src == &btnClockSettings)
    {
        //ShowClock
        //When btnClockSettings clicked change screen to ClockScreen
        //Go to ClockScreen with screen transition towards East
        application().gotoClockScreenScreenSlideTransitionEast();
    }
}
